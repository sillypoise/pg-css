/* ### STACK ### */
.stack {
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.stack > * + * {
    margin-block-start: var(--stack-gap, var(--space-l))
}
.stack:only-child {
    block-size: 100%;
}
/* OPTIONAL SPLIT TARGET */
/* .stack > :nth-child(4) {
    margin-block-end: auto;
} */
/* ### THE CENTER ### */
.center {
    box-sizing: content-box;
    max-inline-size: var(--center-width, var(--content-width-3));
    margin-inline: auto;
    position: relative;
    padding-inline: var(--center-padding, var(--spacing-s))
}
/* ### THE BOX ### */
.box {
    padding: var(--space-m);
    border: var(--border-size-2) solid;
    outline: var(--border-size-3) transparent;
    outline-offset: calc(var(--border-size-3) * -1);
    --color-light: var(--neutral-100)
    --color-dark: var(--neutral-900)
    color: var(--on-background);
    background-color: var(--background)
}
.box * {
    color: inherit;
    background-color: inherit;
    border-radius: inherit
}
.box.invert {
    color: var(--background);
    background-color: var(--on-background);
}

/* ### THE SIDEBAR ### */
.sidebar {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sidebar-gap, var(--space-xs));
}
.sidebar:not([data-direction]) > :first-child {
    flex-basis: var(--sidebar-width, var(--space-5xl));
    flex-grow: 1;
}

.sidebar:not([data-direction]) > :last-child {
    flex-basis: 0;
    flex-grow: 999;
    min-inline-size: var(--sidebar-threshold, 50%);
}

.sidebar[data-direction="rtl"] > :first-child {
    flex-basis: 0;
    flex-grow: 999;
    min-inline-size: var(--sidebar-threshold, 50%);
}

.sidebar[data-direction="rtl"] > :last-child {
    flex-basis: var(--sidebar-width, var(--space-5xl));
    flex-grow: 1;
}

/* ### THE CLUSTER ### */
.cluster {
    display: flex;
    flex-wrap: wrap;
    gap: var(--cluster-gap, var(--space-s));
    justify-content: var(--cluster-justify, start);
    align-items: var(--cluster-align, center);
}

/* ### THE GRID ### */
.auto-grid {
    display: grid;
    gap: var(--space-s);
    grid-template-columns: repeat(
        var(--grid-placement, auto-fill),
        minmax(var(--grid-item-min-widh, 16rem), 1fr)
    )
}

/* ### THE SWITCHER ### */
.switcher {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-s)
}
.switcher > * {
    flex-grow: 1;
    flex-basis: calc((var(--switcher-threshold, 30rem) - 100%) * 999);
}
